<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Lens of Lily</title>
  <style>
    body { font-family: sans-serif; margin:20px; background:#f4f4f4; }
    h1 { color: green; text-align:center; font-size:2.5em; }
    #folder-container, #image-gallery { display:grid; grid-template-columns:repeat(4,1fr); gap:20px; margin-top:20px; }
    .folder, .image-container { background:#fff; border-radius:8px; padding:10px; text-align:center; cursor:pointer; }
    .folder img, .image-container img { width:100px; height:100px; object-fit:cover; border-radius:8px;}
    #buttons { position:fixed; bottom:20px; right:20px; display:flex; gap:10px; }
    .btn { background:green; color:#fff; border:none; padding:10px; border-radius:5px; cursor:pointer;}
    #back-button { display:none; position:absolute; top:20px; left:20px; background:green;color:#fff;padding:10px;border:none;border-radius:5px;cursor:pointer;}
    #fullscreen-modal { display:none; position:fixed;top:0;left:0;width:100vw;height:100vh;background:rgba(0,0,0,0.8);justify-content:center;align-items:center; }
    #fullscreen-modal img { max-width:90%; max-height:90%; }
    #drop-zone { display:none; position:fixed; bottom:80px; right:20px; width:300px; height:150px;border:3px dashed #888; background:#eee; align-items:center; justify-content:center; }
  </style>
</head>
<body>

<h1>Lens of Lily</h1>
<button id="back-button" onclick="goBack()">Back</button>

<div id="folder-container"></div>
<div id="image-gallery"></div>

<div id="buttons">
  <button class="btn" onclick="toggleCreateFolder()">Add Folder</button>
  <button class="btn" onclick="toggleDropZone()">Upload Image</button>
</div>

<div id="create-folder-container" style="display:none; position:fixed; bottom:80px; right:20px; background:#fff; padding:10px; border-radius:5px;">
  <input id="new-folder" placeholder="folder/path" />
  <button class="btn" onclick="createFolder()">Create</button>
  <button class="btn" onclick="toggleCreateFolder()">Cancel</button>
</div>

<div id="drop-zone">Drop images here</div>

<div id="fullscreen-modal" onclick="this.style.display='none'"><img id="fullscreen-img"/></div>

<script>
const GH_USER="GitImageHost", GH_REPO="ImageHoster", GH_BRANCH="main", GH_TOKEN="YOUR_TOKEN";
let currentFolder = "";

async function apiContents(path=""){
  const r = await fetch(`https://api.github.com/repos/${GH_USER}/${GH_REPO}/contents/${path}`, { headers: GH_TOKEN?{Authorization:`token ${GH_TOKEN}`}:{}} );
  if(!r.ok) throw new Error(`API error ${r.status}`);
  return r.json();
}

async function loadFolders(){
  try{
    const list=await apiContents("");
    const dirs=list.filter(i=>i.type==="dir");
    const cont=document.getElementById("folder-container");
    cont.innerHTML="";
    dirs.forEach(d=>{
      const div=document.createElement("div"); div.className="folder";
      div.onclick=()=>loadImages(d.path);
      const img=document.createElement("img");
      img.src=`https://raw.githubusercontent.com/${GH_USER}/${GH_REPO}/${GH_BRANCH}/folder.png`;
      div.append(img, document.createElement("div").append(d.name));
      cont.append(div);
    });
    document.getElementById("folder-container").style.display="grid";
    document.getElementById("back-button").style.display="none";
    document.getElementById("image-gallery").innerHTML="";
  }catch(e){
    console.error(e);
    alert("Failed to load folders");
  }
}

async function loadImages(path){
  currentFolder=path;
  document.getElementById("folder-container").style.display="none";
  document.getElementById("back-button").style.display="block";
  try{
    const list=await apiContents(path);
    const imgs=list.filter(i=>i.type==="file" && /\.(jpe?g|png|gif)$/i.test(i.name));
    const cont=document.getElementById("image-gallery");
    cont.innerHTML="";
    imgs.forEach(i=>{
      const div=document.createElement("div"); div.className="image-container";
      const img=document.createElement("img");
      img.src=i.download_url;
      img.onclick=()=>openFullscreen(i.download_url);
      div.append(img); cont.append(div);
    });
  } catch(e){
    console.error(e);
    alert("Failed to load images");
  }
}

function goBack(){ loadFolders(); }

function openFullscreen(src){ document.getElementById("fullscreen-img").src=src; document.getElementById("fullscreen-modal").style.display="flex"; }

function toggleCreateFolder(){ const el=document.getElementById("create-folder-container"); el.style.display=el.style.display==="none"?"block":"none"; }

async function createFolder(){
  const path=document.getElementById("new-folder").value.trim();
  if(!path)return alert("Enter folder path");
  try{
    const resp=await fetch(`https://api.github.com/repos/${GH_USER}/${GH_REPO}/contents/${path}/.keep`,{
      method:"PUT",
      headers:{Authorization:`token ${GH_TOKEN}`, "Content-Type":"application/json"},
      body:JSON.stringify({message:`Create folder ${path}`, content:btoa("keep"), branch:GH_BRANCH})
    });
    if(resp.ok){toggleCreateFolder(); loadFolders();}
    else throw new Error(await resp.text());
  }catch(e){console.error(e);alert("Create folder failed");}
}

function toggleDropZone(){
  const dz=document.getElementById("drop-zone");
  dz.style.display=dz.style.display==="none"?"flex":"none";
}

document.getElementById("drop-zone").addEventListener("dragover",e=>{e.preventDefault();});
document.getElementById("drop-zone").addEventListener("drop", async e=>{
  e.preventDefault();
  if(!currentFolder)return alert("Select a folder first");
  for(const file of e.dataTransfer.files){
    if(!file.type.startsWith("image/")) continue;
    const base64=await new Promise(r=>{const fr=new FileReader();fr.onload=()=>r(fr.result.split(',')[1]);fr.readAsDataURL(file);});
    const path=`${currentFolder}/${file.name}`;
    await fetch(`https://api.github.com/repos/${GH_USER}/${GH_REPO}/contents/${path}`, {
      method:"PUT",
      headers:{Authorization:`token ${GH_TOKEN}`, "Content-Type":"application/json"},
      body:JSON.stringify({message:`Add ${file.name}`, content:base64, branch:GH_BRANCH})
    });
  }
  toggleDropZone();
  loadImages(currentFolder);
});

loadFolders();
</script>

</body>
</html>
